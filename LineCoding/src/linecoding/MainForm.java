/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package linecoding;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;
/**
 *
 * @author JOSH
 */
public class MainForm extends javax.swing.JFrame implements ActionListener {
    int arr[] = new int[8];
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Mu_Logo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        t3 = new javax.swing.JTextField();
        t4 = new javax.swing.JTextField();
        t5 = new javax.swing.JTextField();
        t6 = new javax.swing.JTextField();
        t7 = new javax.swing.JTextField();
        t8 = new javax.swing.JTextField();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        Exit_BTN = new javax.swing.JButton();
        Back_BTN = new javax.swing.JButton();
        b8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setText("Josh Trivedi");

        jLabel6.setText("91800133045");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("Selection Menu");

        Mu_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/linecoding/MU_Logo.jpg"))); // NOI18N

        jLabel2.setText("Enter the 8 bit - input : ");

        t1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t1KeyTyped(evt);
            }
        });

        t2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t2KeyTyped(evt);
            }
        });

        t3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t3KeyTyped(evt);
            }
        });

        t4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t4KeyTyped(evt);
            }
        });

        t5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t5KeyTyped(evt);
            }
        });

        t6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t6KeyTyped(evt);
            }
        });

        t7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t7KeyTyped(evt);
            }
        });

        t8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t8KeyTyped(evt);
            }
        });

        b1.setText("Unipolar NRZ");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setText("Polar NRZ L");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setText("Polar NRZ I");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setText("Polar RZ");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setText("Unipolar RZ");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setText("Differential Manchester");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setText("AMI");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        Exit_BTN.setText("Exit");
        Exit_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_BTNActionPerformed(evt);
            }
        });

        Back_BTN.setText("Back");
        Back_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_BTNActionPerformed(evt);
            }
        });

        b8.setText("Pseudo Ternary");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Mu_Logo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Back_BTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Exit_BTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(jLabel2)
                                            .addGap(18, 18, 18)
                                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(b1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(b2)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(b3, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(t8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(b4))
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(b5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(b6)
                                    .addGap(18, 18, 18)
                                    .addComponent(b7)
                                    .addGap(18, 18, 18)
                                    .addComponent(b8))))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3)
                    .addComponent(b4))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b5)
                    .addComponent(b6)
                    .addComponent(b7)
                    .addComponent(b8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Exit_BTN)
                    .addComponent(Back_BTN))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Mu_Logo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_BTNActionPerformed
        this.dispose();
       // TODO add your handling code here:
    }//GEN-LAST:event_Back_BTNActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
            try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            new UniPolarRZ(arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }
            
            
    }//GEN-LAST:event_b5ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
            try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            new UniPolarNRZ(arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }
            //new UniPolarNRZ(arr);// TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void Exit_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_BTNActionPerformed
        ExitFrame e = new  ExitFrame();
        e.setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_Exit_BTNActionPerformed

    private void t1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t1KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t1KeyTyped

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            new PolarNRZ_L(arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            new PolarNRZ_I(arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            new PolarRZ(arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b4ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false)
            new DifferentialManchester(arr);
            //this.show(false);
        }//
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            int i;
            int a[] = new int[arr.length];
            a=arr;
            int b[] = new int[arr.length];
            int flag = 0;
            for (i = 0; i < a.length; i++) {
                if (i == 0) {
                    if (a[i] == 1) {
                        b[i] = 1;
                        flag = 1;
                    } else if (a[i] == 0) {
                        b[i] = 0;
                    }
                } else {
                    if ((a[i] == 0) && (flag == 0)) {
                        b[i] = 0;
                    } else if ((a[i] == 0) && (flag == 1)) {
                        b[i] = 0;
                    } else if ((a[i] == 1) && (flag == 1)) {
                        b[i] = -1;
                        flag = 0;
                    } else if ((a[i] == 1) && (flag == 0)) {
                        b[i] = 1;
                        flag = 1;
                    }
                }
            }
            new AlternateMarkInversion(b,arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        try{ 
            arr[0] = Integer.parseInt(t1.getText());
            arr[1] = Integer.parseInt(t2.getText());
            arr[2] = Integer.parseInt(t3.getText());
            arr[3] = Integer.parseInt(t4.getText());
            arr[4] = Integer.parseInt(t5.getText());
            arr[5] = Integer.parseInt(t6.getText());
            arr[6] = Integer.parseInt(t7.getText());
            arr[7] = Integer.parseInt(t8.getText());
            //f1.setVisible(false);
            //this.show(false);
            int i;
            int a[] = new int[arr.length];
            a=arr;
            int b[] = new int[arr.length];
            int flag = 0;
            for (i = 0; i < a.length; i++) {
                if (i == 0) {
                    if (a[i] == 1) {
                        b[i] = 0;
                    } else if (a[i] == 0) {
                        b[i] = 1;
                        flag = 1;
                    }
                } else {
                    if ((a[i] == 0) && (flag == 0)) {
                        b[i] = 1;
                        flag = 1;
                    } else if ((a[i] == 0) && (flag == 1)) {
                        b[i] = -1;
                        flag = 0;
                    } else if ((a[i] == 1) && (flag == 1)) {
                        b[i] = 0;
                    } else if ((a[i] == 1) && (flag == 0)) {
                        b[i] = 0;
                    }
                }
            }
            new PseudoTernary(b,arr);}
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Enter Valid 8-Bit Input");
            }// TODO add your handling code here:
    }//GEN-LAST:event_b8ActionPerformed

    private void t2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t2KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t2KeyTyped

    private void t3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t3KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t3KeyTyped

    private void t4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t4KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t4KeyTyped

    private void t5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t5KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t5KeyTyped

    private void t6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t6KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t6KeyTyped

    private void t7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t7KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t7KeyTyped

    private void t8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t8KeyTyped
    char c=evt.getKeyChar(); //get input from text field character by character
    if (!((c >= '0') && (c <= '1') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) 
    {
        getToolkit().beep();
        evt.consume();
    }// TODO add your handling code here:
    }//GEN-LAST:event_t8KeyTyped
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_BTN;
    private javax.swing.JButton Exit_BTN;
    private javax.swing.JLabel Mu_Logo;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JTextField t5;
    private javax.swing.JTextField t6;
    private javax.swing.JTextField t7;
    private javax.swing.JTextField t8;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e){
        
    }
    
    
}
